{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main-dashboard/main-dashboard.component.css","webpack:///./src/app/main-dashboard/main-dashboard.component.html","webpack:///./src/app/main-dashboard/main-dashboard.component.ts","webpack:///./src/app/main-nav/main-nav.component.css","webpack:///./src/app/main-nav/main-nav.component.html","webpack:///./src/app/main-nav/main-nav.component.ts","webpack:///./src/app/materials.module.ts","webpack:///./src/app/post-form/post-form.component.css","webpack:///./src/app/post-form/post-form.component.html","webpack:///./src/app/post-form/post-form.component.ts","webpack:///./src/app/posts/posts.module.ts","webpack:///./src/app/posts/posts.service.ts","webpack:///./src/app/preview-card/preview-card.component.css","webpack:///./src/app/preview-card/preview-card.component.html","webpack:///./src/app/preview-card/preview-card.component.ts","webpack:///./src/app/shared/auth.service.ts","webpack:///./src/app/signin-dialog/signin-dialog.component.css","webpack:///./src/app/signin-dialog/signin-dialog.component.html","webpack:///./src/app/signin-dialog/signin-dialog.component.ts","webpack:///./src/app/store/actions/blogPost.actions.ts","webpack:///./src/app/store/actions/login.actions.ts","webpack:///./src/app/store/actions/mode.actions.ts","webpack:///./src/app/store/effects/blogPost.effects.ts","webpack:///./src/app/store/reducers/blog.reducer.ts","webpack:///./src/app/store/reducers/mode.reducer.ts","webpack:///./src/app/store/reducers/user.reducer.ts","webpack:///./src/app/store/store.ts","webpack:///./src/blog-card.css","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<main-nav></main-nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialsModule } from './materials.module';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFireModule, FirebaseOptionsToken, FirebaseAppNameToken, FirebaseAppConfigToken } from 'angularfire2';\nimport { AngularFireAuthModule, AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { StoreModule } from '@ngrx/store'\nimport { EffectsModule } from '@ngrx/effects';\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { MainDashboardComponent } from './main-dashboard/main-dashboard.component';\nimport { SigninDialogComponent } from './signin-dialog/signin-dialog.component';\nimport { AuthService } from './shared/auth.service';\nimport { reducers } from './store/store';\nimport { PostsModule } from './posts/posts.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostFormComponent } from './post-form/post-form.component';\nimport { BlogEffects } from './store/effects/blogPost.effects';\n\nconst routes: Routes = [\n  { path: 'main', component: MainDashboardComponent},\n  { path: 'post/edit/:id', component: PostFormComponent},\n  { path: 'post', component: PostFormComponent},\n  { path: '**', redirectTo: 'main'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainNavComponent,\n    MainDashboardComponent,\n    SigninDialogComponent\n  ],\n  entryComponents: [\n    SigninDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialsModule,\n    FormsModule,\n    PostsModule,\n    AngularFireModule,\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    EffectsModule.forRoot([BlogEffects]),\n    StoreModule.forRoot(reducers),\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    { provide: FirebaseOptionsToken, useValue: environment.firebase },\n    // { provide: FirebaseAppNameToken, useValue: 'angular-auth-firebase' },\n    // { provide: FirebaseAppConfigToken, useValue: undefined }\n    AuthService,\n    AngularFireAuth\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"#cards-container {\\n  /* margin-top: 0px;\\n  min-height: 100%;\\n  max-height: 100%;\\n  background: url('/../assets/bbq.jpg') center center;\\n  background-size: cover;\\n  overflow: hidden; */\\n  background-color: whitesmoke\\n}\\n\\n.main-title {\\n  z-index: 2;\\n  position: absolute;\\n  top: 50%;\\n  left: 0;\\n  right: 0;\\n  font-size: 20px;\\n  width: 100%;\\n  height: 26px;\\n  padding: 0;\\n  margin: 0;\\n  margin-top: -70px;\\n  font-size: 12rem;\\n  font: 400 150px/1.3 'Lobster Two', Helvetica, sans-serif;\\n  text-align: center;\\n  color: #031a1a !important;\\n  text-shadow: 1px 1px 1px #000;\\n}\\n\\n.edit-mode-toggle {\\n  z-index: 2;\\n  position: absolute;\\n  top: 5%;\\n  left: 1%;\\n  right: 0;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"grid-container\\\">\\n    <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile colspan=\\\"3\\\" rowspan=\\\"2\\\">\\n            <h1 class=\\\"main-title\\\"><strong>Tourista.io</strong></h1>\\n            <img style=\\\"width:100%; padding-top: 3px\\\" src=\\\"../../assets/map-banner.png\\\" height=\\\"104%\\\" alt=\\\"Main Banner\\\">\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n    <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"100px\\\">\\n        <mat-grid-tile colspan=\\\"3\\\" rowspan=\\\"4\\\" rowHeight=\\\"100px\\\">\\n            <img mat-card-image style=\\\"z-index: 1; margin-bottom: 30px\\\" src=\\\"../../assets/main-banner.jpg\\\" height=100% width=100% alt=\\\"Sub Banner\\\">\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n    <button class=\\\"editMode\\\" *ngIf=\\\"(editMode$ | async)\\\" (click)=\\\"navToNewPostForm()\\\" mat-raised-button>\\n        <mat-icon class=\\\"editMode\\\">add_circle</mat-icon> New Post\\n      </button>\\n      <div style=\\\"display: flex !important; flex-wrap: wrap !important\\\">\\n        <div class=\\\"card blog-card\\\" style=\\\"min-width: 33%; max-width: 33%;\\\" *ngFor=\\\"let post of (blogPosts$ | async); let i = index\\\">\\n          <button (click)=\\\"selectBlogCard(post.id)\\\" >\\n            <div class=\\\"card-body\\\">\\n              <h2 class=\\\"card-title blog-card-title\\\">{{post.title}}</h2>\\n              <h4 class=\\\"card-text blog-card-text\\\">{{post.description}}</h4>\\n              <img style=\\\"height:185px\\\" class=\\\"card-img-top\\\" [src]=\\\"post.imageUrl\\\" alt=\\\"Insert Cover Image\\\">\\n            </div>\\n          </button>\\n        </div>\\n      </div>\\n</div>\\n\\n<!-- <pre>{{ (blogPosts$ | async) | json }}</pre> -->\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { IAppState } from '../store/store';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { requestBlogPosts } from '../store/actions/blogPost.actions';\nimport { activateCreateMode } from '../store/actions/mode.actions';\n\n@Component({\n  selector: 'main-dashboard',\n  templateUrl: './main-dashboard.component.html',\n  styleUrls: ['./main-dashboard.component.css', '../../blog-card.css']\n})\nexport class MainDashboardComponent implements OnInit, OnDestroy {\n\n  blogPosts$: Observable<any>;\n  editMode$: Observable<boolean>;\n  viewMode: boolean = true;\n  viewMode$ = this.store.select('mode', 'view').subscribe(viewMode => this.viewMode = viewMode);\n\n  constructor(private router: Router, private store: Store<IAppState>) {}\n\n  ngOnInit() {\n    //fetch blog posts on start\n    this.store.dispatch(new requestBlogPosts());\n    this.blogPosts$ = this.store.select('posts', 'blogs');\n\n    this.editMode$ = this.store.select('mode', 'edit');\n  }\n\n  selectBlogCard(uid:string) {\n    if(this.viewMode) {\n      alert('View Mode not yet implemented!')\n      return;\n    };\n    this.router.navigate(['post', 'edit', uid]);\n  }\n\n  navToNewPostForm() {\n    this.store.dispatch(new activateCreateMode());\n    this.router.navigate(['/post']);\n  }\n\n  ngOnDestroy() {\n    this.viewMode$.unsubscribe()\n  }\n}\n","module.exports = \".editMode {\\n  background-color: rgba(226, 85, 49, 0.863) !important;\\n}\\n\\n.sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n}\\n\\n#nav-profilePic {\\n  position: relative;\\n  left: -10px;\\n  border-radius: 50%;\\n  height: 40px;\\n  float: left;\\n  margin-left: -10px\\n}\\n\\n.nav-button {\\n  color: whitesmoke;\\n  text-decoration: none;\\n  font-size: 20px\\n}\\n\\n.nav-icon {\\n  padding: 5px;\\n  position: relative;\\n  top: -5px;\\n  left: -8px;\\n}\\n\\n.nav-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.mat-dialog-container {\\n    padding-top: 0px !important;\\n    width: 100% !important;\\n    height: auto !important;\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"app-conainer sidenav-container\\\">\\n  <mat-sidenav-content>\\n    <mat-toolbar [ngClass]=\\\"(editMode$ | async)? 'editMode': null\\\" style=\\\"background-color: rgb(3, 26, 26); color: whitesmoke\\\">\\n      <mat-toolbar-row>\\n        <span>Travel Blog</span>\\n        <span class=\\\"nav-spacer\\\"></span>\\n        <div *ngIf=\\\"!(userInfo$ | async).isLoggedIn\\\">\\n            <span style=\\\"margin-right: 25px\\\">\\n              <a (click)=\\\"openLogInDialog()\\\" class=\\\"nav-button\\\">Sign In</a>\\n            </span>\\n            <span> <a class=\\\"nav-button\\\" href=\\\"#\\\">Register</a></span>\\n        </div>\\n        <div *ngIf=\\\"(userInfo$ | async).isLoggedIn\\\">\\n            <img id=\\\"nav-profilePic\\\" [src]=\\\"(userInfo$ | async).userPhotoURL\\\" alt=\\\"User Profile Picture\\\">\\n              <span style=\\\"text-align: center\\\">\\n                <button mat-button  class=\\\"nav-button\\\" [matMenuTriggerFor]=\\\"menu\\\">{{(userInfo$ | async).userName}}</button>\\n                  <mat-menu #menu=\\\"matMenu\\\">\\n                    <button mat-menu-item (click)=\\\"switchToEditMode()\\\">Edit Mode</button>\\n                    <button mat-menu-item (click)=\\\"switchToViewMode()\\\">View Mode</button>\\n                    <mat-divider></mat-divider>\\n                    <button style=\\\"color: whitesmoke\\\" mat-button (click)=\\\"logout()\\\" href=\\\"#\\\">Log Out</button>\\n                  </mat-menu>\\n              </span>\\n        </div>\\n      </mat-toolbar-row>\\n    </mat-toolbar>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component, ViewEncapsulation, OnChanges, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { SigninDialogComponent } from '../signin-dialog/signin-dialog.component';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { User } from 'firebase';\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { filter, tap, share} from 'rxjs/operators';\n\nimport { AuthService } from '../shared/auth.service';\nimport { IAppState } from '../store/store';\nimport { activateEditMode, deactivateEditMode } from 'src/app/store/actions/mode.actions';\n\n\n@Component({\n  selector: 'main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MainNavComponent implements OnInit {\n\n  userInfo$;\n  editMode$;\n\n  constructor(\n    private store: Store<IAppState>,\n    private authService : AuthService,\n    private dialog: MatDialog,\n  ) {}\n\n  ngOnInit() {\n    this.authService.watchAuthState().subscribe();\n    this.userInfo$ = this.store.select(\"user\");\n    this.editMode$ = this.store.select(\"mode\", \"edit\");\n  }\n\n  openLogInDialog() {\n    this.dialog.open(SigninDialogComponent)\n  }\n\n  switchToEditMode() {\n    this.store.dispatch(new activateEditMode())\n  }\n\n  switchToViewMode() {\n    this.store.dispatch(new deactivateEditMode())\n  }\n\n  logout() {\n    this.authService.logout();\n    this.store.dispatch(new deactivateEditMode())\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule, MatCardModule, MatMenuModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatDividerModule, MatSnackBarModule, MatSlideToggleModule } from '@angular/material';\n\n@NgModule({\n  exports: [\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    MatMenuModule,\n    MatSlideToggleModule\n  ]\n})\nexport class MaterialsModule{}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <h1>Create a New Blog Post</h1>\\n      <br>\\n      <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmitForm(f)\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-7\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"Title\\\">Title</label>\\n                      <input #formTitle=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"title\\\" maxlength=\\\"34\\\" [(ngModel)]=\\\"blogPost.title\\\" class=\\\"form-control\\\" id=\\\"post-title\\\" placeholder=\\\"Enter title\\\" required>\\n                      <div *ngIf=\\\"formTitle.invalid && formTitle.touched\\\" maxlength=\\\"102\\\" class=\\\"alert alert-danger\\\">\\n                          Title field is required\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"Descripion\\\">Description</label>\\n                      <input #desc=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"blogPost.description\\\" class=\\\"form-control\\\" id=\\\"post-desc\\\" [value]=\\\"blogPost.description\\\" required>\\n                      <div *ngIf=\\\"desc.invalid && desc.touched\\\" class=\\\"alert alert-danger\\\">\\n                          A description/summary of this post is required\\n                      </div>\\n                      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">A brief description of this post.</small>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"Image Url\\\">Image Url</label>\\n                      <input #image=\\\"ngModel\\\" type=\\\"url\\\" name=\\\"imageUrl\\\" [(ngModel)]=\\\"blogPost.imageUrl\\\" class=\\\"form-control\\\" id=\\\"post-imageURL\\\" [value]=\\\"blogPost.imageUrl\\\" required>\\n                      <div *ngIf=\\\"image.invalid && image.touched\\\" class=\\\"alert alert-danger\\\">\\n                          Image is required\\n                      </div>\\n                      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">Cover image for blog entry</small>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-md-5\\\">\\n                  <preview-card [previewPost]=\\\"blogPost\\\"></preview-card>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\" style=\\\"margin-top: 20px\\\">\\n              <quill-editor [style]=\\\"{height: '420px'}\\\"></quill-editor>\\n          </div>\\n          <div style=\\\"float: right; margin-bottom: 20px\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-right: 5px\\\">Submit</button>\\n              <button  type=\\\"button\\\"  *ngIf=\\\"paramId\\\" (click)=\\\"onDeletePost()\\\" class=\\\"btn btn-danger\\\" style=\\\"margin-right: 5px\\\">Delete</button>\\n              <button  type=\\\"button\\\" pull-right class=\\\"btn btn-default\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n          </div>\\n      </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgModel, NgForm } from '@angular/forms';\n\nimport { Store } from '@ngrx/store';\nimport { IAppState } from '../store/store';\nimport { PostsService } from '../posts/posts.service';\nimport { Subscription, Observable } from 'rxjs';\nimport { map, tap, withLatestFrom, startWith, share, filter } from 'rxjs/operators';\nimport { IBlogPost } from '../model/blogPost.model';\n\n@Component({\n  selector: 'app-post-form',\n  templateUrl: './post-form.component.html',\n  styleUrls: ['./post-form.component.css']\n})\nexport class PostFormComponent implements OnInit, OnDestroy {\n\n  mode$: Subscription;\n  editMode: boolean;\n  createMode: boolean;\n  blog$: Observable<IBlogPost[]> = this.store.select('posts', 'blogs');\n  blogPost: IBlogPost;\n  paramId: string;\n\n\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store < IAppState > , private postsService: PostsService) {}\n\n  ngOnInit() {\n    this.paramId = this.route.snapshot.params.id\n\n    this.mode$ = this.store.select('mode').subscribe(mode => {\n      this.editMode = mode.edit,\n      this.createMode = mode.create\n    });\n\n    if (this.createMode) this.setDefaultValues();\n    else {\n        this.blog$.pipe(\n          map((posts) => {\n            return posts.find(post => post.id == this.paramId)\n          })\n        ).subscribe(post => this.blogPost = post);\n    }\n  }\n\n  private setDefaultValues() {\n    return this.blogPost = {\n      title: \"Title of Blog Post\",\n      description: \"A brief description of the blog post entry\",\n      imageUrl: \"http://www-db.deis.unibo.it/courses/TW/DOCS/w3schools/w3css/img_mountains_wide.jpg\"\n  }\n  }\n\n  onSubmitForm(entry: NgForm) {\n      if (!!this.paramId && confirm('Update this Blog Post?')) this.postsService.updatePost(this.blogPost.id, entry.value)\n      else if (this.createMode) this.postsService.createPost(entry);\n\n      this.router.navigate(['/main']);\n  }\n\n  onDeletePost() {\n    //if user cancels prompt, function finishes without calling delete function\n    if (!confirm('Are you sure you want to delete this Post?')) return;\n\n    this.postsService.deletePost(this.blogPost.id);\n    this.router.navigate(['/main']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/main']);\n  }\n\n  ngOnDestroy() {\n      this.mode$.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PostFormComponent } from '../post-form/post-form.component';\nimport { RouterModule } from '@angular/router';\nimport { QuillModule } from 'ngx-quill';\nimport { PreviewCardComponent } from '../preview-card/preview-card.component';\nimport { MaterialsModule } from '../materials.module';\nimport { FormsModule } from '@angular/forms';\nimport { PostsService } from './posts.service';\n\n@NgModule({\n  declarations: [PostFormComponent, PreviewCardComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    QuillModule,\n    MaterialsModule\n  ],\n  exports: [PostFormComponent],\n  providers: [PostsService]\n})\nexport class PostsModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport * as firebase from 'firebase';\nimport { NgForm } from '@angular/forms';\nimport 'rxjs/add/operator/map';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  createPost(f: NgForm) {\n    this.db.list('/posts/').push({\n      title: f.control.value.title,\n      description: f.control.value.description,\n      imageUrl: f.control.value.imageUrl\n    })\n  }\n\n  getAllPosts() {\n    return this.db.list('/posts').snapshotChanges().map(actions => {\n      return actions.map(a => {\n        const data = a.payload.val();\n        const id = a.payload.key;\n        return { id, ...data };\n      });\n    });\n  }\n\n  updatePost(blogId: string, post: NgForm) {\n    this.db.object('/posts/'+ blogId).update(post);\n  }\n\n  deletePost(blogId: string) {\n    this.db.object('/posts/'+ blogId).remove();\n  }\n}\n","module.exports = \"* {\\n  color: whitesmoke\\n}\\n\"","module.exports = \"<div class=\\\"card blog-card\\\" style=\\\"max-width: 100%; height: 388px; background-color: #424242\\\">\\n  <div class=\\\"card-body\\\">\\n    <h2 class=\\\"card-title blog-card-title\\\">{{previewPost.title}}</h2>\\n    <h4 class=\\\"card-text blog-card-text\\\">{{previewPost.description}}</h4>\\n    <img style=\\\"height:185px\\\" class=\\\"card-img-top\\\" [src]=\\\"previewPost.imageUrl\\\" alt=\\\"Insert Cover Image\\\">\\n  </div>\\n</div>\\n\"","import { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { IAppState } from '../store/store';\nimport { filter, switchMap, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { IBlogPost } from '../model/blogPost.model';\n\n@Component({\n  selector: 'preview-card',\n  templateUrl: './preview-card.component.html',\n  styleUrls: ['./preview-card.component.css', '../../blog-card.css']\n})\nexport class PreviewCardComponent {\n\n  @Input() previewPost: IBlogPost;\n\n  constructor(private route: ActivatedRoute, private store: Store<IAppState>) { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase';\nimport { Observable } from 'rxjs';\nimport { ICredentials } from '../model/signin.model';\nimport { Store } from '@ngrx/store';\nimport { LoginUser, LogoutUser, LoginAdmin } from '../store/actions/login.actions'\nimport { tap } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material';\nimport { MainDashboardComponent } from '../main-dashboard/main-dashboard.component';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  private adminId ='XI6JVm0PdARwR2QcdMQykNnKJFS2';\n\n  constructor(private router: Router,  private afAuth: AngularFireAuth, private store: Store<any>, private snackBar: MatSnackBar) {}\n\n  watchAuthState() {\n    return this.afAuth.authState.pipe(\n      tap(userData => {\n        if (!!userData) {\n          this.snackBar.open(`Welcome, ${userData.displayName}!`, null, {duration: 2000})\n          this.store.dispatch(new LoginUser(userData));\n          if (this.adminId === userData.uid)\n          this.store.dispatch(new LoginAdmin())\n        }\n      })\n    );\n  }\n\n  login(method:string, credentials?: ICredentials) {\n    switch(method) {\n      case 'facebook':\n        return this.afAuth.auth.signInWithPopup(new firebase.auth.FacebookAuthProvider())\n          .catch(error => console.log(error));\n\n      case 'google':\n        return this.afAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider())\n          .catch(error => console.log(error));\n\n      case 'twitter':\n        return this.afAuth.auth.signInWithPopup(new firebase.auth.TwitterAuthProvider());\n\n      default:\n      this.afAuth.auth.signInWithEmailAndPassword(credentials.email, credentials.password)\n    }\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n    this.store.dispatch(new LogoutUser());\n    this.router.navigate(['main'])\n  }\n\n}\n","module.exports = \".signin-button {\\n  padding-right: 20px !important\\n}\\n\\n#signin-form {\\n  border-right: solid 1px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6\\\">\\n      <form id=\\\"signin-form\\\" #f=\\\"ngForm\\\">\\n          <h2>Sign In</h2>\\n          <br>\\n          <mat-form-field style=\\\"width: 90%;\\\">\\n            <input color=\\\"white\\\" matInput ngModel name=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" required>\\n          </mat-form-field>\\n          <br>\\n          <mat-form-field style=\\\"width: 90%;\\\">\\n            <input matInput ngModel name=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" required>\\n          </mat-form-field>\\n          <button color=\\\"accent\\\"mat-raised-button>Submit</button>\\n        </form>\\n  </div>\\n  <div class=\\\"col-sm-6\\\" style=\\\"padding-top: 12%\\\">\\n    <div>\\n      <button (click)=\\\"onLogin('google')\\\" style=\\\"margin-bottom: 5px; width: 100%; background-color: #d54b3d\\\" mat-raised-button mat-dialog-close>Google</button>\\n      <button (click)=\\\"onLogin('facebook')\\\" style=\\\"margin-bottom: 5px; width: 100%; background-color: #4267b2\\\" mat-raised-button mat-dialog-close=\\\"\\\">Facebook</button>\\n      <!-- <button (click)=\\\"onLogin('twitter')\\\" style=\\\"width: 100%; background-color: #1da1f2\\\" mat-raised-button mat-dialog-close=\\\"\\\">Twitter</button> -->\\n    </div>\\n   </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../shared/auth.service';\n\n\n@Component({\n  selector: 'app-signin-dialog',\n  templateUrl: './signin-dialog.component.html',\n  styleUrls: ['./signin-dialog.component.css'],\n})\nexport class SigninDialogComponent implements OnInit {\n\n  constructor(private authService: AuthService) {\n  }\n\n  ngOnInit() {\n  }\n\n  onLogin(type, credentials?) {\n    this.authService.login(type, credentials)\n  }\n\n}\n","import { Action } from \"@ngrx/store\";\n\nexport const REQUEST_BLOGPOSTS = 'REQUEST_BLOGPOSTS';\nexport const LOAD_BLOGPOSTS = 'LOAD_BLOGPOSTS';\n\nexport class requestBlogPosts implements Action {\n  readonly type = REQUEST_BLOGPOSTS\n}\n\nexport class loadBlogPosts implements Action {\n  readonly type = LOAD_BLOGPOSTS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport type BlogPostActions = requestBlogPosts | loadBlogPosts;\n","import { Action } from '@ngrx/store';\nimport { User } from 'firebase';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGINADMIN = 'LOGINADMIN'\nexport const LOGOUT = 'LOGOUT';\nexport const REGISTER = 'REGISTER';\n\nexport class LoginUser implements Action {\n  readonly type = LOGIN;\n\n  constructor(public payload: User) {}\n}\n\nexport class LoginAdmin implements Action {\n  readonly type = LOGINADMIN;\n}\n\nexport class LogoutUser implements Action {\n  readonly type = LOGOUT;\n}\n\nexport class RegisterUser implements Action {\n  readonly type = REGISTER;\n}\n\nexport type LoginActions = LoginUser | LoginAdmin | LogoutUser | RegisterUser;\n","import { Action } from \"@ngrx/store\";\n\nexport const EDIT_MODE_ON = 'EDIT_MODE_ON';\nexport const EDIT_MODE_OFF = 'EDIT_MODE_OFF';\nexport const CREATE_MODE_ON = 'CREATE_MODE_ON';\nexport const CREATE_MODE_OFF = 'CREATE_MODE_OFF';\n\n\nexport class activateEditMode implements Action {\n  readonly type = EDIT_MODE_ON\n};\n\nexport class deactivateEditMode implements Action {\n  readonly type = EDIT_MODE_OFF\n};\n\nexport class activateCreateMode implements Action {\n  readonly type = CREATE_MODE_ON\n};\n\nexport class deactivateCreateMode implements Action {\n  readonly type = CREATE_MODE_OFF\n};\n\nexport type modeActions = activateEditMode | deactivateEditMode | activateCreateMode | deactivateCreateMode;\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Action } from '@ngrx/store';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { REQUEST_BLOGPOSTS, loadBlogPosts } from '../actions/blogPost.actions'\nimport { PostsService } from '../../posts/posts.service';\n\n@Injectable()\nexport class BlogEffects {\n  // Listen for the 'REQUEST' action\n  @Effect()\n  loadBlog$ = this.actions$.pipe(\n    ofType(REQUEST_BLOGPOSTS),\n    switchMap((action: Action) => {\n      return this.postsService.getAllPosts().pipe(\n          map(result => {\n            return new loadBlogPosts(result)\n          }))\n    })\n  );\n\n  constructor(private postsService: PostsService, private actions$: Actions) {}\n}\n","import { IBlogPost } from \"../../model/blogPost.model\";\nimport { BlogPostActions, LOAD_BLOGPOSTS } from \"../actions/blogPost.actions\";\n\nexport interface State {\n  blogs: any;\n}\n\nconst INITIAL_BLOG_STATE: State = {\n  blogs: null\n}\n\nexport function blogReducer(state = INITIAL_BLOG_STATE, action: BlogPostActions) {\n  switch(action.type) {\n    case LOAD_BLOGPOSTS:\n      return {\n        ...state,\n        blogs: [...action.payload]\n      }\n  }\n  return state;\n}\n","import { modeActions, EDIT_MODE_ON, EDIT_MODE_OFF, CREATE_MODE_ON, CREATE_MODE_OFF } from \"../actions/mode.actions\";\n\nexport interface State {\n  edit: boolean;\n  view: boolean,\n  create: boolean\n}\n\nexport const INITIAL_MODE_STATE: State = {\n  edit: false,\n  view: true,\n  create: false\n}\n\nexport function modeReducer(state = INITIAL_MODE_STATE, action: modeActions) {\n  switch(action.type) {\n    case EDIT_MODE_ON:\n      return {\n        edit: true,\n        view: false,\n        create: false\n      }\n    case EDIT_MODE_OFF:\n      return {\n        edit: false,\n        view: true,\n        create: false\n      }\n    case CREATE_MODE_ON:\n      return {\n        edit: false,\n        view: false,\n        create: true\n      }\n      case CREATE_MODE_OFF:\n      return {\n        edit: false,\n        view: false,\n        create: false\n      }\n  }\n  return state;\n}\n","import { Action } from '@ngrx/store';\nimport { LOGIN, LOGOUT, REGISTER, LoginActions, LOGINADMIN } from '../actions/login.actions';\n\nexport interface State {\n  isLoggedIn: boolean,\n  isAdmin?: boolean,\n  uuid: string,\n  userName: string,\n  userPhotoURL?: string\n}\n\nconst INITIAL_USER_STATE: State = {\n  isLoggedIn: false,\n  isAdmin: false,\n  uuid: null,\n  userName : null,\n}\n\nexport function userReducer(state = INITIAL_USER_STATE, action: LoginActions) {\n  switch(action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        isLoggedIn: true,\n        isAdmin: false,\n        uuid: action.payload.uid,\n        userName: action.payload.displayName,\n        userPhotoURL: action.payload.photoURL\n      }\n\n    case LOGINADMIN:\n      return {\n        ...state,\n        isAdmin : true\n      }\n\n    case LOGOUT:\n      return {\n        ...INITIAL_USER_STATE\n      }\n    case REGISTER:\n      return {\n        ...state\n      }\n  }\n  return state;\n}\n","import * as fromUser from './reducers/user.reducer'\nimport * as fromBlogs from './reducers/blog.reducer'\nimport * as fromMode from './reducers/mode.reducer';\nimport { ActionReducerMap, ActionReducer, createSelector, combineReducers } from '@ngrx/store';\n\nexport interface IAppState {\n  user: fromUser.State,\n  posts: fromBlogs.State,\n  mode: fromMode.State\n}\n\nexport const reducers: ActionReducerMap<IAppState> = {\n  user: fromUser.userReducer,\n  posts: fromBlogs.blogReducer,\n  mode: fromMode.modeReducer\n};\n","module.exports = \"/* Application-wide style rules */\\n\\n.card-img-top {\\n  width: 100% !important;\\n}\\n\\n.blog-card {\\n  display: block;\\n  margin: 2px;\\n  padding: 3px;\\n  min-width: 32%;\\n  max-width: 32%;\\n  flex-grow: 1;\\n  border-radius: 4px;\\n}\\n\\n.blog-card >  button {\\n  background-color:  #424242;\\n  width: 100%;\\n  padding: 5px\\n}\\n\\n.blog-card img {\\n  height: 300px !important;\\n\\n}\\n\\n.blog-card-title {\\n  color: lightsteelblue;\\n  font-family: \\\"Comic Sans MS\\\", \\\"Comic Sans\\\", cursive;\\n  margin-top: 10px;\\n  text-align: center;\\n  height: 20px;\\n}\\n\\n.blog-card-text {\\n  color: lightgray;\\n  padding-top: 10px;\\n  margin-bottom: 8px;\\n  text-align: center;\\n  overflow-x: hidden;\\n  overflow-y: hidden;\\n  height: 32px;\\n}\\n\"","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDxL7EjuVnbMdJe6PmuYY6n__9Bd9tB9Tk\",\n    authDomain: \"travel-blog-app.firebaseapp.com\",\n    databaseURL: \"https://travel-blog-app.firebaseio.com\",\n    projectId: \"travel-blog-app\",\n    storageBucket: \"travel-blog-app.appspot.com\",\n    messagingSenderId: \"693287944296\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}